# FermiHDI Network Foundation Platform
# FermiHDI Limited
# No License
# Copyright (c) 2024

name: fh_beta
services:
  router_a:
    image: fermihdi:lab-router
    build:
      context: ./router
      target: router
    hostname: router-a
    volumes:
      - ./router/router-a.conf:/etc/frr/frr.conf
      - ./router/daemons.conf:/etc/frr/daemons
      - ./router/pmacctd.conf:/etc/pmacct/pmacctd.conf
      - ./router/pmacctd.interfaces.map:/etc/pmacct/pmacctd.interfaces.map
      - /lib/modules:/lib/modules
    init: false
    privileged: true
    networks:
      a_b_transit:
        ipv4_address: 10.140.0.2
      a_c_transit:
        ipv4_address: 10.140.10.2
      a_load:
        ipv4_address: 10.140.110.2
      telemetry:
  router_b:
    image: fermihdi:lab-router
    build:
      context: ./router
      target: router
    hostname: router-b
    volumes:
      - ./router/router-b.conf:/etc/frr/frr.conf
      - ./router/daemons.conf:/etc/frr/daemons
      - ./router/pmacctd.conf:/etc/pmacct/pmacctd.conf
      - ./router/pmacctd.interfaces.map:/etc/pmacct/pmacctd.interfaces.map
      - /lib/modules:/lib/modules
    init: false
    privileged: true
    networks:
      a_b_transit:
        ipv4_address: 10.140.0.3
      b_load:
        ipv4_address: 10.140.120.2
      telemetry:
      outside:
  router_c:
    image: fermihdi:lab-router
    build:
      context: ./router
      target: router
    hostname: router-c
    volumes:
      - ./router/router-c.conf:/etc/frr/frr.conf
      - ./router/daemons.conf:/etc/frr/daemons
      - ./router/pmacctd.conf:/etc/pmacct/pmacctd.conf
      - ./router/pmacctd.interfaces.map:/etc/pmacct/pmacctd.interfaces.map
      - /lib/modules:/lib/modules
    init: false
    privileged: true
    networks:
      a_c_transit:
        ipv4_address: 10.140.10.3
      c_load1:
        ipv4_address: 10.140.130.2
      c_load2:
        ipv4_address: 10.140.140.2
      telemetry:
      outside:
  test_a:
    image: fermihdi:test-point
    build: ./test-points
    networks:
      a_load:
        ipv4_address: 10.140.110.100
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.110.2"]
  test_b:
    image: fermihdi:test-point
    build: ./test-points
    networks:
      b_load:
        ipv4_address: 10.140.120.100
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.120.2"]
  test_c1:
    image: fermihdi:test-point
    build: ./test-points
    networks:
      c_load1:
        ipv4_address: 10.140.130.100
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.130.2"]
  test_c2:
    image: fermihdi:test-point
    build: ./test-points
    networks:
      c_load2:
        ipv4_address: 10.140.140.100
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.140.2"]
  webapp:
    image: fermihdi:lab-webapp
    build:
      context: ./webapp
    command: ["10.140.0.0/16", "10.140.130.2", "-- --redis 10.140.140.10"]
    ports:
      - 3000:3000
    networks:
      outside:
      c_load1:
        ipv4_address: 10.140.130.10
    cap_add:
      - NET_ADMIN
    depends_on:
      - redis
  redis:
    image: fermihdi:redis
    build: ./redis
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      c_load2:
        ipv4_address: 10.140.140.10
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.140.2"]
  load_master:
    image: fermihdi:locust
    build: ./load
    ports:
      - "9089:8089"
      - "5557:5557"
    volumes:
      - ./load/locust-master.conf:/usr/src/app/locust.conf
      - ./load/locustfile.py:/usr/src/app/locustfile.py
    depends_on:
      - webapp
      - router_a
      - router_b
      - router_c
      - test_a
      - test_b
      - test_c1
      - test_c2
    networks:
      a_load:
        ipv4_address: 10.140.110.20
      outside:
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.110.2", "--host http://10.140.130.10:3000"]
  load_a:
    image: fermihdi:locust
    build: ./load
    volumes:
      - ./load/locust-worker.conf:/usr/src/app/locust.conf
      - ./load/locustfile.py:/usr/src/app/locustfile.py
    depends_on:
      - load_master
    networks:
      a_load:
      outside:
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.110.2", "--master-host 10.140.110.20"]
    restart: unless-stopped
    deploy:
      replicas: 4
  load_b:
    image: fermihdi:locust
    build: ./load
    volumes:
      - ./load/locust-worker.conf:/usr/src/app/locust.conf
      - ./load/locustfile.py:/usr/src/app/locustfile.py
    depends_on:
      - load_master
    networks:
      b_load:
      outside:
    cap_add:
      - NET_ADMIN
    command: ["10.140.0.0/16", "10.140.120.2", "--master-host 10.140.110.20"]
    restart: unless-stopped
    deploy:
      replicas: 4
  zoo:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    networks:
      kafka:
        ipv4_address: 10.145.0.11
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://10.145.0.10:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    networks:
      kafka:
        ipv4_address: 10.145.0.10
      kafka-producers:
        ipv4_address: 10.145.10.10
      kafka-consumers:
        ipv4_address: 10.145.20.10
  postgres:
    image: postgres:14
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    networks:
      kafka:
        ipv4_address: 10.145.0.12
  kafka_console:
    image: conduktor/conduktor-console:1.21.0
    ports:
      - "9080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_ORGANIZATION_NAME: "Network Traffic Lab"
      CDK_DATABASE_URL: "postgresql://conduktor:change_me@10.145.0.12:5432/conduktor-console"
      CDK_MONITORING_CORTEX-URL: "http://10.145.0.15:9009/"
      CDK_MONITORING_ALERT-MANAGER-URL: "http://10.145.0.15:9010/"
      CDK_MONITORING_CALLBACK-URL: "http://10.145.0.15:8080/monitoring/api/"
      CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL: "http://localhost:8080"
      CDK_ADMIN_EMAIL: "admin@demo.com"
      CDK_ADMIN_PASSWORD: "admin"
      CDK_CLUSTERS_0_ID: 'network-traffic-lab-pkc'
      CDK_CLUSTERS_0_NAME: 'Network Traffic Lab'
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: '10.145.0.10:9092'
    depends_on:
      - postgres
      - kafka
    networks:
      kafka:
        ipv4_address: 10.145.0.14
      outside:
  kafka_monitoring:
    image: conduktor/conduktor-console-cortex:1.21.0
    environment:
      CDK_CONSOLE-URL: "http://10.145.0.14:8080"
    depends_on:
      - kafka_console
    networks:
      kafka:
        ipv4_address: 10.145.0.15
  ipfix_collector:
    image: fermihdi:pmacct
    build:
      context: ./router
      target: pmacct
    volumes:
      - ./router/nfacctd.conf:/etc/pmacct/nfacctd.conf
      - ./router/GeoLite2-City.mmdb:/etc/geoip.db
      - ./router/docker-start-nfacctd.sh:/docker-start.sh
    depends_on:
      - kafka
    networks:
      kafka:
      kafka-producers:
      telemetry:
        ipv4_address: 10.143.0.10

volumes:
  pg_data:
  conduktor_data:

networks:
  a_b_transit:
    ipam:
      driver: default
      config:
        - subnet: 10.140.0.0/24
          gateway: 10.140.0.1
  a_c_transit:
    ipam:
      driver: default
      config:
        - subnet: 10.140.10.0/24
          gateway: 10.140.10.1
  a_load:
    ipam:
      driver: default
      config:
        - subnet: 10.140.110.0/24
          gateway: 10.140.110.1
  b_load:
    ipam:
      driver: default
      config:
        - subnet: 10.140.120.0/24
          gateway: 10.140.120.1
  c_load1:
    ipam:
      driver: default
      config:
        - subnet: 10.140.130.0/24
          gateway: 10.140.130.1
  c_load2:
    ipam:
      driver: default
      config:
        - subnet: 10.140.140.0/24
          gateway: 10.140.140.1
  telemetry:
    ipam:
      driver: default
      config:
        - subnet: 10.143.0.0/24
  kafka:
    ipam:
      driver: default
      config:
        - subnet: 10.145.0.0/24
  kafka-producers:
    ipam:
      driver: default
      config:
        - subnet: 10.145.10.0/24
  kafka-consumers:
    ipam:
      driver: default
      config:
        - subnet: 10.145.20.0/24
  outside: {}
